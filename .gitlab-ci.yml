image: python:3.10-slim

stages:
  - test
  - test-pedantic
  - deploy

.pytest:
  stage: test
  script:
    - python3 -m pip install -e .
    - python3 -m pip install pytest
    - python3 -m pytest tests/dft_calculations --tb=short
  only:
    changes:
      - eminus/*.py
      - eminus/**/*.py
      - tests/*.py
      - tests/**/*.py

.pytest-pedantic:
  extends: .pytest
  stage: test-pedantic
  only:
    refs:
      - tags

########## Lint python files ##########
lint:
  stage: test
  script:
    - pip install -e .
    - pip install flake8 flake8-docstrings flake8-import-order
    - flake8
  only:
    changes:
      - "*.py"
      - "**/*.py"

########## Test code functionality for the current and minimal supported versions ##########
pytest:
    extends: .pytest

pytest:minimal:
  extends: .pytest
  image: python:3.6-slim
  before_script:
    - pip install numpy==1.17.0 scipy==1.4.0

########## Test code functionality for all python versions between current and minimal ##########
python:
  extends: .pytest-pedantic
  image: python:$PYTHON_VERSIONS-slim
  parallel:
    matrix:
      - PYTHON_VERSIONS: ['3.7', '3.8', '3.9']

########## Test code functionality under linux, macos, and windows ##########
platform:linux:
  extends: .pytest-pedantic
  image: ubuntu:latest
  before_script:
    - apt-get update -y
    - apt-get install python3 python3-pip --no-install-recommends -y

platform:macos:
  extends: .pytest-pedantic
  image: sickcodes/docker-osx:latest
  before_script:
    - python3 -m ensurepip

platform:windows:
  extends: .pytest-pedantic
  tags:
    - windows
  before_script:
    # https://gitlab.com/gitlab-org/ci-cd/shared-runners/images/gcp/windows-containers/-/issues/13
    - Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
    - choco install python --no-progress -y
    - refreshenv
    - Set-Alias -Name python3 -Value python

########## Build documentation ##########
pages:
  stage: deploy
  script:
    - pip install -e .
    # Build sphinx documentation
    - pip install sphinx furo
    - sphinx-build -b html ./docs ./public
    # Convert notebooks to html
    - pip install notebook
    - find examples -name '*.ipynb' -exec jupyter nbconvert --to html {} --template classic \;
    - find examples -name '*.html' -exec mv {} public/_static \;
    # Minify all text files
    - apt-get install -y minify
    - find public \( -name '*.css' -o -name '*.js' -o -name '*.svg' \) -exec minify -vo {} {} \;
    - find public -name '*.html' -exec minify -vo {} {} --html-keep-document-tags --html-keep-end-tags \;
    # Compress all text files
    - find public \( -name '*.css' -o -name '*.html' -o -name '*.js' -o -name '*.svg' \) -exec gzip -vrk9 {} \;
  artifacts:
    paths:
      - public
  only:
    changes:
      - docs/*
      - docs/**/*
    refs:
      - main
