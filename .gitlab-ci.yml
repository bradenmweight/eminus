image: python:3.11-slim

stages:
  - test
  - test-pedantic
  - deploy

.pytest:
  stage: test
  script:
    - python3 -m pip install -e .
    - python3 -m pip install pytest
    - python3 -m pytest tests/ -m "not slow"
  only:
    changes:
      - eminus/*.py
      - eminus/**/*.py
      - tests/*.py
      - tests/**/*.py

.pytest-pedantic:
  extends: .pytest
  stage: test-pedantic
  when: manual

##### Lint Python files #####
lint:
  stage: test
  script:
    - pip install ruff
    - ruff check .
  only:
    changes:
      - "*.py"
      - "**/*.py"

##### Test and create coverage reports #####
coverage:
  stage: test
  script:
    - python3 -m pip install -e .
    - python3 -m pip install coverage pyscf pytest pytest-cov
    - coverage run -m pytest tests/ --ignore=tests/examples --ignore=tests/extras
    - coverage report --precision=2
    - coverage xml
    - coverage html
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    paths:
      - htmlcov/
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  only:
    refs:
      - main
    # Fix: Run coverage even if only the lint or pages job run to prevent an unknown status badge
    # Reference: https://gitlab.com/gitlab-org/gitlab/-/issues/346779
    changes:
      - "*.py"
      - "**/*.py"
      - docs/*
      - docs/**/*

##### Test the minimal supported versions #####
minimal:
  extends: .pytest
  image: python:3.7-slim
  before_script:
    - pip install numpy==1.17.0 scipy==1.6.0

##### Test code functionality for all Python versions between #####
python:
  extends: .pytest-pedantic
  image: python:$PYTHON_VERSIONS-slim
  parallel:
    matrix:
      - PYTHON_VERSIONS: ['3.8', '3.9', '3.10']

##### Test code functionality under Linux, macOS, and Windows #####
platform:linux:
  extends: .pytest-pedantic
  image: ubuntu:latest
  before_script:
    - apt-get update -y
    - apt-get install python3 python3-pip -y --no-install-recommends

platform:macos:
  extends: .pytest-pedantic
  image: sickcodes/docker-osx:latest
  before_script:
    - python3 -m ensurepip
    - python3 -m pip config set global.no-warn-script-location true

platform:windows:
  extends: .pytest-pedantic
  tags:
    - windows
  before_script:
    # https://gitlab.com/gitlab-org/ci-cd/shared-runners/images/gcp/windows-containers/-/issues/13
    - Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
    - choco install python -y --no-progress
    - refreshenv
    - Set-Alias -Name python3 -Value python

##### Test the code installation after building #####
installation:
  extends: .pytest-pedantic
  script:
    - pip install build twine
    - python -m build
    # Do a check with twine
    - twine check dist/*
    # Remove pseudopotential files to check if the installation files work on their own
    - rm -rf eminus/psp/
    - cd dist/
    # Test the source distribution
    - tar -xf eminus-*.tar.gz
    - pip install eminus-*/.
    - python -c "import eminus; eminus.SCF(eminus.Atoms('He', (0, 0, 0)), etol=10).run()"
    # Test the wheel
    - pip uninstall eminus -y
    - pip install eminus-*.whl
    - python -c "import eminus; eminus.SCF(eminus.Atoms('He', (0, 0, 0)), etol=10).run()"

##### Build documentation #####
pages:
  stage: deploy
  dependencies:
    - coverage
  script:
    - pip install -e .
    # Build Sphinx documentation
    - pip install sphinx furo
    - sphinx-build -b html ./docs ./public
    # Convert notebooks to HTML
    - pip install notebook
    - find examples -name '*.ipynb' -exec jupyter nbconvert --to html {} --template classic \;
    - find examples -name '*.html' -exec mv {} public/_static \;
    # Minify all text files
    - apt-get update -y
    - apt-get install minify -y --no-install-recommends
    - find public \( -name '*.css' -o -name '*.js' -o -name '*.svg' \) -exec minify -vo {} {} \;
    - find public -name '*.html' -exec minify -vo {} {} --html-keep-document-tags --html-keep-end-tags \;
    # Compress all text files
    - find public \( -name '*.css' -o -name '*.html' -o -name '*.js' -o -name '*.svg' \) -exec gzip -vrk9 {} \;
    # Copy the coverage artifacts
    - cp -r htmlcov/ public/
  artifacts:
    paths:
      - public
  only:
    changes:
      - docs/*
      - docs/**/*
      - examples/*
      - examples/**/*
      - eminus/version.py
    refs:
      - main
